{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nexport let AddClientComponent = /*#__PURE__*/(() => {\n  class AddClientComponent {\n    constructor(apiService, http) {\n      this.apiService = apiService;\n      this.http = http;\n    }\n    ngOnInit() {}\n    onSubmit(registerForm) {\n      console.log(registerForm.value, 'registerForm');\n      const {\n        name,\n        email,\n        phone\n      } = registerForm.value;\n      const res = this.http.post('http://localhost:8000/user/createUser', {\n        name,\n        email,\n        phone\n      });\n      console.log(res, 'res');\n      // this.apiService.createUser(name, email, phone);\n    }\n  }\n\n  AddClientComponent.ɵfac = function AddClientComponent_Factory(t) {\n    return new (t || AddClientComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  AddClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddClientComponent,\n    selectors: [[\"app-add-client\"]],\n    decls: 19,\n    vars: 3,\n    consts: [[1, \"my-3\"], [3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"name\", \"email\", \"id\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"name\", \"phone\", \"id\", \"phone\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-sm\", \"btn-primary\"]],\n    template: function AddClientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\");\n        i0.ɵɵtext(2, \"Add Client\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddClientComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(4);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Client Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Client Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 6);\n        i0.ɵɵtext(15, \"Client Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function AddClientComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.phone = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 9);\n        i0.ɵɵtext(18, \"Add Client\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.name);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.phone);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm]\n  });\n  return AddClientComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}